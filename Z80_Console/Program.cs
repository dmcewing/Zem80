using System;
using System.Threading;
using Z80.Core;

namespace Z80_Console
{
    class Program
    {
        private static double _lowestRatio = 1000;
        private static double _highestRatio = 0;

        static void Main(string[] args)
        {
            Processor cpu = Bootstrapper.BuildProcessor();
            ushort address = 0;

            //for (int i = 0; i < 5000; i++)
            //{
            //cpu.Memory.WriteBytesAt(address, 0x01, 0x03, 0x14, 0x8E, 0xDD, 0x8E, 0xFF, 0xDD, 0x8C, 0xDD, 0xDD, 0xDD, 0xCB, 0xDD, 0x46);
            cpu.Memory.WriteBytesAt(address, 0xDD, 0x21, 0x69, 0x00, 0xDD, 0x7E, 0x00, 0xE6, 0xFF, 0x20, 0x07, 0xDD, 0x21, 0x69, 0x00, 0xDD, 0x7E, 0x00, 0x16, 0x00, 0x5F, 0xCB, 0x13, 0xCB, 0x12, 0xCB, 
                0x13, 0xCB, 0x12, 0xCB, 0x13, 0xCB, 0x12, 0x2A, 0x36, 0x5C, 0x19, 0x11, 0x7F, 0x00, 0x01, 0x08, 0x00, 0xED, 0xB0, 0x0E, 0x08, 0xC5, 0x11, 0x7F, 0x00, 0x21, 0xFF, 0x50, 0x0E, 0x08, 0xEB, 0xCB, 
                0x26, 0xCB, 0x17, 0xEB, 0xCB, 0x2F, 0xCB, 0x16, 0xCB, 0x17, 0x06, 0x1F, 0x2B, 0xCB, 0x2F, 0xCB, 0x16, 0xCB, 0x17, 0x10, 0xF7, 0x13, 0xD5, 0x11, 0x1F, 0x01, 0x19, 0xD1, 0x0D, 0x20, 0xDF, 0x21, 
                0x00, 0x06, 0x2B, 0x7C, 0xB5, 0x20, 0xFB, 0xC1, 0x0D, 0x20, 0xCA, 0xDD, 0x23, 0x18, 0x9B, 0x20, 0x20, 0x20, 0x20, 0x20, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x20, 0x57, 0x6F, 0x72, 0x6C, 0x64, 0x20, 
                0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);

            //cpu.Memory.WriteBytesAt(address, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD);
            //address += 12;
            //}

            int cycles = 0;
            while (true)
            {
                cpu.Start();
                Console.SetCursorPosition(0, 0);
                Console.WriteLine("Cycles: " + cycles++);
            }
        }        
    }
}
